# -*- coding: utf-8 -*-
"""miles2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DwYsJ-RRQYkx25u5EYJelPL9qxqmMwem
"""

import csv
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure

filename = "try1.csv"

fields = []
rows = []

with open(filename, 'r') as csvfile:
    csvreader = csv.reader(csvfile)
    fields = next(csvreader)
    for row in csvreader: 
        rows.append(row)

prevRowHead = rows[0][0]
avgData = []
avgData.append(fields)
sizeCount = 0
sum = len(fields)*[0]
avg = len(fields)*[0]
for row in rows:            
        if prevRowHead == row[0]:
          sizeCount = sizeCount + 1
          for elemInd in range(len(fields)):
            sum[elemInd] = sum[elemInd] + float(row[elemInd])
            avg[elemInd] = sum[elemInd] / sizeCount
            prevRowHead = row[0]
        else:
          avgData.append(avg)
          sizeCount = 1
          sum = len(fields)*[0]
          avg = len(fields)*[0]
          for elemInd in range(len(fields)):
            sum[elemInd] = sum[elemInd] + float(row[elemInd])
            avg[elemInd] = sum[elemInd] / sizeCount
            prevRowHead = row[0]

import matplotlib as mpl
figure(figsize=(18, 16), dpi=70)
font1 = {'family':'serif','size':15}

for i in range(2,9):
  plt.plot([x[0] for x in avgData[1:]], [x[i] for x in avgData[1:]], linewidth = 2.5)
  plt.xlabel(avgData[0][0], fontdict = font1)
  plt.ylabel(avgData[0][i], fontdict = font1)
  plt.grid(color = 'green', linestyle = '--', linewidth = 0.5)
  ylimbot, ylimtop = plt.ylim()
  plt.ylim(bottom=0)
  plt.ylim(top = 1.5 * ylimtop)
  plt.xticks([x[0] for x in avgData[1:]])
  plt.title("Simulation Count = 100", fontdict = font1)
  fname = str(avgData[0][i])
  plt.savefig(fname+'.png')
  plt.clf()

plt.show()

figure(figsize=(18, 16), dpi=70)
font1 = {'family':'serif','size':15}

for i in range(2,9):
  plt.subplot(4, 2, i-1)
  plt.plot([x[0] for x in avgData[1:]], [x[i] for x in avgData[1:]], linewidth = 2.5)
  plt.xlabel(avgData[0][0], fontdict = font1)
  plt.ylabel(avgData[0][i], fontdict = font1)
  plt.grid(color = 'green', linestyle = '--', linewidth = 0.5)
  ylimbot, ylimtop = plt.ylim()
  plt.ylim(bottom=0)
  plt.ylim(top = 1.5 * ylimtop)
  plt.xticks([x[0] for x in avgData[1:]])
  plt.title("Simulation Count = 100", fontdict = font1)
  
plt.savefig('Try1'+'.png')
plt.suptitle("Try#1 Results",fontsize=20)
plt.subplots_adjust(left=0.1, bottom=0.1, right=0.9, top=0.9, wspace=0.25, hspace=0.4)
plt.show()